<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="app_name">Samouczek Jetpack</string>
    <string name="back_again_to_close">Cofnij ponownie, aby zamknąć aplikację</string>
    <string name="settings">Ustawienia</string>
    <string name="select_app_language">Wybierz język aplikacji</string>
    <string name="polish">Polski</string>
    <string name="english">Angielski</string>

    <string name="app_theme">Motyw aplikacji</string>
    <string name="theme_auto">Automatyczny</string>
    <string name="theme_light">Jasny</string>
    <string name="theme_dark">Ciemny</string>

    <!-- Groups -->
    <string name="course_getting_started">Pierwsze kroki z Jetpack Compose</string>
    <string name="course_layouts_elements">Układy i elementy interfejsu</string>
    <string name="course_theming_styling">Stylizowanie interfejsu</string>
    <string name="course_getting_started_description">Poznaj podstawy Jetpack Compose, w tym konfigurację środowiska i tworzenie pierwszego elementu composable.</string>
    <string name="course_layout_description">Zagłęb się w układy Compose, motywy i stylizację swojej aplikacji.</string>
    <string name="ciurse_state_navigation_description">Efektywnie zarządzaj stanem i nawiguj między ekranami w aplikacji Compose.</string>
    <string name="course_advanced_description">Poznaj zaawansowane tematy Jetpack Compose, takie jak animacje, niestandardowe układy i optymalizacja wydajności.</string>
    <string name="completed">Ukończone</string>
    <string name="completed_percent">Ukończono %1$d%%</string>
    <string name="popup_continue">Kontynuuj</string>
    <string name="swipe_to_dismiss">Przesuń, aby ukryć</string>
    <string name="lesson_completed">Lekcja ukończona</string>

    <!-- Lessons -->
    <plurals name="lesson_pages">
        <item quantity="one">%d strona</item>
        <item quantity="few">%d strony</item>
        <item quantity="many">%d stron</item>
        <item quantity="other">%d stron</item>
    </plurals>
    <string name="compose_introduction_title">Co to Jetpack Compose?</string>
    <string name="setting_up_environment_title">Konfigurowanie środowiska</string>
    <string name="creating_first_component_title">Tworzenie pierwszego komponentu</string>
    <string name="completed_n_of">Ukończono %1$d z %2$d lekcji</string>
    <string name="course_compose_basics">Podstawy Jetpack Compose</string>
    <string name="course_state_lifecycle">"Stan i Cykl Życia "</string>
    <string name="course_interactivity_navigation">Interaktywność i Nawigacja</string>
    <string name="course_animations_transitions">Animacje i Przejścia</string>
    <string name="course_advanced">Zaawansowane</string>
    <string name="clear_all_progress">Usuń wszystkie postępy</string>
    <string name="dialog_cancel">Anuluj</string>
    <string name="dialog_clear_progress">Usuń postępy</string>
    <string name="dialog_clear_title">Usuń wszystkie postępy</string>
    <string name="dialog_clear_text">Czy na pewno chcesz zresetować postęp we wszystkich kursach? Tej akcji nie można cofnąć.</string>
    <string name="popup_start">Zaczynajmy</string>
    <string name="enabled">Włączone</string>
    <string name="disabled">Wyłączone</string>
    <string name="select_app_theme">Wybierz motyw aplikacji</string>
    <string name="app_language">Język aplikacji</string>
    <string name="lesson_popup">Następna lekcja</string>
    <string name="lesson_popup_options">Wyświetlanie następnej lekcji</string>
    <string name="lesson_text_title">Wyświetlanie tekstu</string>
    <string name="text_8_heading">Konfiguracja układ tekstu</string>
    <string name="font_small">Mała</string>
    <string name="font_medium">Średnia</string>
    <string name="font_big">Duża</string>
    <string name="code_listing_font">Czcionka wyświetlanego kodu</string>
    <string name="select_listing_font">Wybierz czcionkę wyświetlanego kodu</string>
    <string name="text_1_heading">Wyświetlanie zwykłego tekstu</string>
    <string name="text_1_1">Najprostszym sposobem, aby wyświetlić tekst jest użycie funkcji kompozycyjnej |Text|.\nPosiada ona jeden wymagany parametr: string do wyświetlenia.</string>
    <string name="text_1_2">Ten kod wyświetli następujący tekst:</string>
    <string name="text_2_heading">Stylizacja tekstu</string>
    <string name="text_2_1">Funkcja kompozycyjna |Text| posiada wiele opcjonalnych parametrów, których możesz użyć, aby zmienić wygląd wyśweitlanego tekstu.</string>
    <string name="text_2_2">Zmiana koloru tekstu:</string>
    <string name="text_2_3">Zmiana rozmiaru tekstu:</string>
    <string name="text_4_heading">Modyfikowanie czcionki</string>
    <string name="text_4_1">Wyświetlanie tekstu jako kursywę:</string>
    <string name="text_4_2">Wyświetlanie tekstu jako pogrubiony:</string>
    <string name="text_4_3">Jetpack Compose oferuje również inne grubości czcionek: |Thin|, |ExtraLight|, |Light|, |Normal|, |Medium|, |SemiBold|, |ExtraBold| i |Black|.\nMożesz również utworzyć niestandardową grubość czcionki, przekazując odpowiednią wartość Int do konstruktora.</string>
    <string name="text_6_heading">Zaawansowana stylizacja</string>
    <string name="text_6_1">Możesz dodać cień do tekstu, tworząc nowy TextStyle i określając kolor, przesunięcie oraz promień rozmycia cienia.</string>
    <string name="text_5_heading">Ozdoby tekstu</string>
    <string name="text_5_1">Rysowanie poziomej linii na tekście:</string>
    <string name="text_5_2">Możesz połączyć dekoracje tekstu za pomocą funkcji |TextDecoration.combine| lub operatora dodawania:</string>
    <string name="text_7_heading">Zaawansowana stylizacja - wiele stylów</string>
    <string name="text_7_1">Możesz użyć kilku styli w jednej funkcji |Text| za pomocą klasy |AnnotatedString|. Funkcja pomocnicza |buildAnnotatedString| pozwala na łatwe dodawanie fragmentów tekstu z róznymi stylami.</string>
    <string name="text_9_heading">Wyświetlanie tekstu z zasobów</string>
    <string name="text_9_1">Rekomendowanym podejściem do wyświetlania tekstu jest wykorzystywanie zasobów (string resources), zamiast wpisywania wartości na sztywno w kodzie.\nPozwala to na łatwiejsze użycie tego samego tekstu w wielu miejsach, zmniejszając przy tym szansę na pomyłkę.\nDodatkowo, ułatwia to znacząco przygotowanie aplikacji do obsługi wielu języków.</string>
    <string name="hello_world">Witaj, świecie! (po polsku)</string>
    <string name="text_8_1">Możesz ograniczyć liczbę wyświetlanych linijek dla długich tekstów:</string>
    <string name="text_8_2">Dodatkowo, możesz również zaznaczyć przepełnienie tekstu:</string>
    <string name="text_3_heading">Zmiana czcionki</string>
    <string name="text_3_1">Użycie czcionki o stałej szerokości</string>
    <string name="text_3_2">Jetpack compose udostępnia również inne czcionki: |Default|, |SansSerif|, |Serif| i |Cursive|. Możesz też użyć własnej czcionki, gdy zaimportujesz ją do projektu.</string>
    <string name="button_1_heading">Tworzenie zwykłego przycisku</string>
    <string name="lesson_button_title">Przyciski</string>
    <string name="button_1_1">Aby stworzyć przycisk, możesz użyć funkcji kompozycyjnej |Button|.\nFunkcja ta ma dwa wymagane parametry: treść do wyświetlenia oraz wywołanie zwrotne (callback), które zostanie uruchomione, gdy użytkownik kliknie przycisk.</string>
    <string name="button_2_heading">Wykonywanie akcji po kliknięciu</string>
    <string name="button_2_1">Aby wykonać jakąś akcję gdy użytkownik wciśnie przyckisk, możesz przekazać do parametru |onClick| funkcję, która zostanie wykonana po kliknięciu.</string>
    <string name="button_2_2">Użyte w kodzie |remember| i |mutableIntStateOf| będą opisane w późniejszych lekcjach.</string>
    <string name="button_3_heading">Rodzaje przycisków</string>
    <string name="button_3_1">Jetpack Compose udostępnia 5 predefiniowanych typów przycisków: filled (domyślny), tonal, outlined, elevated i text.\nMożesz wybrać ten, który najlepiej pasuje do stylu aplikacji oraz jego funkcji.</string>
    <string name="button_4_heading">Przyciski z ikonami</string>
    <string name="button_4_1">Kolejnym rodzajem przycisku jest przycisk z ikoną. Zazwyczaj zawiera w sobie jedną ikoną (ale może być to coś innego).\nDostępne są 3 rodzaje: domyślny, filed i outlined.</string>
    <string name="button_5_heading">Przyciski przełączające</string>
    <string name="button_5_1">"Przyciski z ikonami mogą być również użyte jako przełączniki.\nTaki przycisk posiada dwa wymagane parametry: obecny stan przełącznika (boolean) i funkcja, która będzie wywoływana przy zmianie tego stanu.\nDostępne są trzy rodzaje przycisków przełączejących: filled, tonal i outlined. "</string>
    <string name="button_1_2">Możesz wyłączyć przycisk poprzez ustawienie parametru |enabled| na false.</string>
    <string name="button_6_heading">Dostosowywanie kolorów</string>
    <string name="button_6_1">Możesz zmienić kolory przycisku tworząc |ButtonColors| i przekazując je do funkcji kompozycyjnej:</string>
    <string name="button_7_heading">Modyfikoanie kształtu</string>
    <string name="button_7_1">Możesz zmienić kształt przycisku przekazując utworzony niestandardowy kształt.\nMargines wewnętrzny zawartości można również określić za pomocą parametru |contentPadding|.</string>
    <string name="button_8_heading">Obramowanie</string>
    <string name="button_8_1">Możesz dodać obramowanie do przycisku za pomocą parametru |border|.\nObramowanie może mieć jednolity kolor lub gradient.</string>
    <string name="lesson_toast_title">Powiadomienia toast</string>
    <string name="toast_requires_newer_api">Ten podgląd wymaga 30 poziom API (Android 11).</string>
    <string name="toast_1_heading">Wyświetlanie powiadomień toast</string>
    <string name="toast_2_heading">Dodawanie wywołań zwrotnych (callback)</string>
    <string name="toast_3_heading">Anulowanie wiadomości</string>
    <string name="lesson_text_field_title">Pola tekstowe</string>
    <string name="text_field_1_heading">Tworzenie pola tekstowego</string>
    <string name="text_field_2_heading">Ograniczanie liczby linii</string>
    <string name="text_field_3_heading">Pola wyłączone i tylko do odczytu</string>
    <string name="text_field_4_heading">Dekorowanie pól tekstowych</string>
    <string name="text_field_5_heading">Dodawanie prefixu i suffixu</string>
    <string name="text_field_6_heading">Transformacje wizualne</string>
    <string name="text_field_7_heading">Typy klawiatur</string>
    <string name="text_field_8_heading">Akcja IME</string>
    <string name="text_field_9_heading">Dostosowywanie wyglądu</string>
    <string name="lesson_image_title">Obrazy</string>
    <string name="image_1_heading">Wyświetlanie obrazów</string>
    <string name="image_2_heading">Grafika wektorowa</string>
    <string name="image_3_heading">Modyfikowanie wartości alpha</string>
    <string name="image_4_heading">Nakładanie filtru kolorów</string>
    <string name="image_5_heading">Nakładanie barwy</string>
    <string name="image_6_heading">Skalowanie obrazu</string>
    <string name="lesson_card_title">Karty</string>
    <string name="card_1_heading">Tworzenie karty</string>
    <string name="card_2_heading">Typy kart</string>
    <string name="card_3_heading">Dostosowywanie wyglądu</string>
    <string name="lesson_modifier_title">Używanie modyfikatorów</string>
    <string name="modifier_1_heading">Stosowanie modyfikatora</string>
    <string name="modifier_2_heading">Kolejność ma znaczenie</string>
    <string name="modifier_3_heading">Zmienianie rozmaru</string>
    <string name="modifier_4_heading">Dodawanie marginesów</string>
    <string name="modifier_5_heading">Przewijanie zawartości</string>
    <string name="modifier_6_heading">Klikanie elementów</string>
    <string name="modifier_7_heading">Przeciąganie</string>
    <string name="modifier_8_heading">Animowanie rozmiaru</string>
    <string name="modifier_9_heading">Rozmycie</string>
    <string name="modifier_10_heading">Wycinanie kształtów</string>
    <string name="modifier_12_heading">Warunkowy modyfikator</string>
    <string name="modifier_13_heading">Wielokrotne użycie modyfikatora</string>
    <string name="modifier_11_heading">Dostępność</string>
    <string name="modifier_1_1">Dzięki modyfikatorom możesz zmieniać wygląd lub modyfikować zachowanie funkcji kompozycyjnych.\nWszystkie opisane wcześniej funkcje kompozycyjne posiadają opcjonalny parametr: modyfikator.</string>
    <string name="modifier_2_1">Kolejność użycia modyfikatorów ma znaczenie. Każda funkcja zmienia modyfikator zwrócony przez poprzednią funkcję, co sprawia że układ sekwencji ma wpływ na wynik końcowy.</string>
    <string name="modifier_2_2">W pierwszym przykładzie czerwone tło jest zauważalnie mniejsze niż w drugim, ponieważ jest ono dodane po marginesie, który ogranicza dostępne miejsce dla następnych modyfikatorów.</string>
    <string name="modifier_3_1">Możesz zmienić rozmiar funkcji kompozycyjnych stosując modyfikator |size|, |height| lub |width|.\nMożesz również zająć całą dostępną przestrzeń (lub część) używając modyfikatorów |fillMaxSize|, |fillMaxWidth| lub |fillMaxHeight|.</string>
    <string name="modifier_4_1">Możesz dodać marginesy za pomocą modyfikatora |padding|.\nMoże on dodać takie same marginesy na wszystkich stronach, na krawędzi pionowej i poziomej, lub inne z każdej strony.</string>
    <string name="modifier_5_1">Możesz dodać funkcję przewijania, aby wyświetlać większe elementy.\nModyfikatory |verticalScroll| and |horizontalScroll| umożliwiają na przewijanie w odpowiednim kierunku.\nModyfikatory te dodatkowo wymagają przekazania stanu przewijania, zazwyczaj w postaci funkcji |rememberScrollState()|.</string>
    <string name="modifier_6_1">Każda funkcja kompozycyjna może reagować na kliknięcia dzięki modyfikatorowi |clickable|.\nWymaga on podania funkcji do wywołania po każdym kliknięciu, podobnie jak przyciski.</string>
    <string name="modifier_6_2">Możliwe jest również wykonywanie różnych akcji po podwójnym i długim kliknięciu.\nMożesz to osiągnąć za pomocą modyfikatora  |combinedClickable|.</string>
    <string name="modifier_7_1">Funkcje kompozycjne można również przeciągać, po zastosowaniu modyfikatorów |draggable| i |offset|.\nAby umożliwić przeciąganie w dwóch osiach, możesz zastąpić modyfikator |draggable| przez |pointerInput| i manualnie zmieniać wartości przesunięcia w obu osiach.</string>
    <string name="modifier_8_1">Kiedy rozmiar zawartości może się zmieniać, możesz użyć modyfikatora |animateConentSize| aby płynnie animować zmiany.</string>
    <string name="modifier_9_1">Możesz rozmyć funkcje kompozycyjne za pomocą modyfikatora |blur|.\nWymaga on podania promienia rozmycia oraz, opcjonalnie, jak traktować krawiędzie obszaru rozmycia.</string>
    <string name="modifier_10_1">Możesz wyciąć kształt z zawartości dzięki modyfikatorowi |clip|.\nBardziej skomplikowane kształty można osiągnać poprzez użycie tego modyfikatora wiele razy.</string>
    <string name="modifier_11_1">Możesz dodać informacje dostępności do swojego interfejsu za pomocą modfikatora |sematnics|.\nMoże on określić rolę konkrentych elementów interfejsu oraz opisać ich stan na użytek usług dostępności.</string>
    <string name="modifier_12_1">Modifykatory mogą być nakładane warunkowo, dzięki użyciu funkcji |Modifier.then|.</string>
    <string name="modifier_13_1">Modyfikatory są zwykłymi obiektami języka Kotliin - możesz utworzyć jeden i wykorzytsać go później w wielu miejscach.</string>
    <string name="text_field_1_1">Pola tekstowe pozwalają użytkownikom na wprowadzanie tekstu. Aby je utwożyć, możesz wykorzystać funkcję kompozycjną |TextField|.\nPosiada ona dwa wymanagne parametry: obecnie wyświetlany tekst oraz funkcje wywoływaną na każdej zmianie wprowadzonego tekstu.</string>
    <string name="text_field_1_2">Możesz dodać tekst zastępczy, który będzie widoczny, gdy nie wprowadzono żadnego tekstu, za pomocą parametru |placeholder|.</string>
    <string name="text_field_2_1">Możesz ograniczyć pole tekstowe tylko do jednej linii, za pomocą parametru |singleLine|.\nMożesz również zmienić minimalną i maksymalną liczbę wyświetlanych linii parametrami |minLines| i |maxLines|.</string>
    <string name="text_field_3_1">Parametry |enabled| i |readOnly| mogą odpowiednio, wyłączyć pole tekstowe i zablokować możliwość edytowaniea tekstu.</string>
    <string name="text_field_4_1">Możesz dodać więcej informacji wizualnych do pola tekstowego za pomocą parametrów |label|, |supportingText|, |leadingIcon| i |trailingIcon|.</string>
    <string name="text_field_5_1">Możesz również dodać |prefix| i |suffix|, które będą wyświetlane wokół wprowadzonego tekstu.</string>
    <string name="text_field_6_1">Tekst można przekształcić wizualnie za pomocą parametru |visualTransformation|.\nMoże to być przydatne na przykład podczas wprowadzania haseł lub kodów pocztowych.\nJetpack Compose zapewnia gotową transformację wizualną haseł: |PasswordVisualTransformation|.\n</string>
    <string name="text_field_6_2">Możliwe jest utworzenie niestandardowej transformacji wizualnej. |CustomVisalTransformation| zastępuje widoczne litery cyframi 0–9 w zależności od ich położenia.\nWarto podkreślić, że rzeczywista wartość tekstowa pozostaje niezmieniona; nadal zawiera dokładnie to, co wprowadził użytkownik.</string>
    <string name="text_field_7_1">Możesz zmodyfikować pole tekstowe, aby wyświetlić użytkownikowi różne typy klawiatury za pomocą parametru |keyboardOptions|.\nAby mieć pewność, że wprowadzony tekst zawiera tylko dozwolone symbole (np. liczby), możesz filtrować wprowadzony tekst w wywołaniu zwrotnym |onValueChanged|.</string>
    <string name="text_field_8_1">Można zmienić akcję IME wyświetlaną na klawiaturze, tworząc obiekt |KeyboardOptions| z określoną akcją IME i przekazując go do funkcji kompozycyjnej.\n</string>
    <string name="text_field_9_1">Możesz zmienić wygląd pola tekstowego, przekazując niestandardowe parametry |TextFieldColors| i |TextStyle| do funkcji kompozycyjnej.</string>
    <string name="image_1_1">Aby wyświetlić obraz, możesz użyć fukncji kompozycujnej |Image|.\nMa dwa wymagane parametry: |painter|, który jest odpowiedzialny za rysowanie obrazu (zwykle |painterResource|) i |contentDescroption| używanego przez usługi ułatwień dostępu.\n|Image| może wyświetlić obrazy w formacie png, jpg i webp.</string>
    <string name="image_2_1">Funkcja kompozycyjna |Image| może również wyświetlać grafikę wektorową.\nPlik opisujący grafikę powinien być w formacie xml.</string>
    <string name="image_3_1">Wartość alfa wyświetlanego obrazu możesz modyfikować za pomocą parametru |alpha|.</string>
    <string name="image_4_1">Parametr |colorFilter| umożliwia modyfikację wartości kolorów każdego piksela na obrazie.\nMożesz go użyć do zmiany nasycenia, przesunięcia odcienia lub ręcznego dostosowania wartości.</string>
    <string name="image_5_1">Możesz również nakładać barwę na obraz za pomocą parametru |color Filter|.\nDostępnych jest wiele trybów mieszania kolorów, z których każdy daje inne efekty.</string>
    <string name="image_6_1">Możesz zmienić sposób skalowania obrazu w jego granicach, używając parametru |contentScale|.\nJeśli nie określisz tego parametru, domyślnie zostanie użyty |ContentScale.Fit|.</string>
    <string name="card_1_1">Karty służą jako kontenery dla interfejsu aplikacji.\nKarta zazwyczaj przedstawia pojedyńczy spójny element treści, taki jak artykuł w aplikacji informacyjnej lub wiadomość w aplikacji komunikatora.</string>
    <string name="card_1_2">Aby utworzyć kartę, możesz użyć funkcji kompozycyjnej |Card|. Posiada ona jeden wymagany parametr: treść do wyświetlenia.\n</string>
    <string name="card_1_3">Kartę można uczynić klikalną poprzez podanie funkcji do parametru wywołania zwrotnego |onClick|.</string>
    <string name="card_2_1">Jetpack Compose oferuje również inne warianty kart: |ElevatedCard| i |OutlinedCard|.</string>
    <string name="card_3_1">Możesz dostosować kolory, kształt i obramowanie karty, przekazując niestandardowe wartości do parametrów |colors|, |shape| i |border|.\n</string>
    <string name="toast_1_1">Toast to mała wiadomość pop-up, która zapewnia informacje zwrotne na temat operacji.\nZajmuje niewielką ilość miejsca i znika automatycznie po upływie limitu czasu.\n</string>
    <string name="toast_1_2">Aby wyświetlić wiadomość toast, musisz najpierw utworzyć obiekt Toast.\nMożesz to zrobić za pomocą metody |Toast.makeText|, która przyjmuje następujące parametry: |Context| powiązany z wiadomością, tekst do wyświetlenia i czas trwania tosta.\nW Jetpack Compose, można łatwo uzykać dostęp do konteksu za pomocą funkcji kompozycyjnej |LocalContext.Current|.\n\nPo utworzeniu obiektu toastu możesz użyć metody |call| na nim, aby wyświetlić go na ekranie.</string>
    <string name="toast_2_1">Możesz dodać wywołania zwrotne do tosta, aby wiedzieć, kiedy jest on wyświetlany i ukrywany.\nAby to zrobić, możesz utworzyć obiekt dziedziczący po |Toast.Callback| i zarejestrować go za pomocą metody |addCallback|.\n</string>
    <string name="toast_3_1">Możesz ograniczyć czas widoczności wiadomości wywołując metodę |cancel|, aby ukryć ją wcześniej.</string>
    <string name="quiz_question_n_of">Pytanie %1$d z %2$d</string>
    <string name="quiz_check">Sprawdź</string>

</resources>